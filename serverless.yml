
service: logging

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, "development"}
  memorySize: 128
  timeout: 10

package:
  exclude:
    - "**"
  include:
    - python3/cloudwatch/src/lambda_function.py
    - python3/shipper/shipper.py

custom:
  environment: ${opt:stage, "development"}

functions:
  cloudwatch-logzio-shipper:
    name: "cloudwatch-logzio-shipper"
    role: IamRoleCloudWatchLogzIoShipper
    handler: python3/cloudwatch/src/lambda_function.lambda_handler
    environment:
      ENRICH: environment=${self:custom.environment}
      FORMAT: JSON
      TOKEN: ${ssm:/logzio_token~true}
      URL: https://listener.logz.io:8071
    events:
      - cloudwatchLog:
          logGroup: "/aws/events/ecs-service"
      - cloudwatchLog:
          logGroup: "/figure/container/fgr-service-auth"
      - cloudwatchLog:
          logGroup: "/figure/container/fgr-service-backend"
      - cloudwatchLog:
          logGroup: "/figure/container/fgr-service-card-program"
      - cloudwatchLog:
          logGroup: "/figure/container/fgr-service-emailing"
      - cloudwatchLog:
          logGroup: "/figure/container/fgr-service-weather"
      - cloudwatchLog:
          logGroup: "/figure/container/figure-register-api"
      - cloudwatchLog:
          logGroup: "/figure/container/figure-kiosk-api"
      - cloudwatchLog:
          logGroup: "/figure/container/figure-manage-api"
      - cloudwatchLog:
          logGroup: "/figure/container/make-it-butter-api"
      - cloudwatchLog:
          logGroup: "/figure/container/figure-manage"
      - cloudwatchLog:
          logGroup: "/figure/container/make-it-butter"

resources:
  Resources:
    IamRoleCloudWatchLogzIoShipper:
      Type: AWS::IAM::Role
      Properties:
        RoleName: "lambda-role--cloudwatch-logzio-shipper"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: myPolicyName
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:logs'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'log-group:/aws/lambda/*:*:*'